
syntax = "proto3";


package Brocker;

option java_package = "com.fizlrock.messagebrocker";
option java_outer_classname = "BrockerProtos";

import "google/protobuf/empty.proto";

// Регистрация нового пользователя

message RegisterNewUserRequest{
  string user_id = 1;
}

// Отправка сообщений

message SendMessageResponse {
  enum MessageState {
    ACCEPTED = 0;
    REJECTED = 1;   
  }
  enum RejectReason {
    UNKNOWN_RECIPIENT_ID = 0;    
    UNKNOWN_SENDER_ID = 1;
    ILLEGAL_MESSAGE_SIZE = 2;
   }

  MessageState state = 1;
  RejectReason reject_reason = 2;
}

// Получение сообщений с удалением на сервере

message GetMessageRequest {
  string recipient_id = 1;
   int32 limit = 2;
}

// Проверка наличия сообщений для пользователя

message Message {
  string sender_id = 1;
  string recipient_id = 2;
  // Нужно ограничение на поля !!!
  bytes data = 3;
}



service Brocker {
  rpc RegisterNewUser(google.protobuf.Empty) returns (RegisterNewUserRequest);
  rpc SendMessages(stream Message) returns (stream SendMessageResponse);
  rpc getMessages(GetMessageRequest) returns (stream Message);
}








